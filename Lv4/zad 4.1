from sklearn import datasets
from sklearn . model_selection import train_test_split
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import sklearn.linear_model as lm
from sklearn.metrics import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error, r2_score
from sklearn . metrics import mean_absolute_error
import math

data = pd.read_csv('data_C02_emission.csv')

# a)
X = data[['Fuel Consumption City (L/100km)','Fuel Consumption Hwy (L/100km)','Fuel Consumption Comb (L/100km)','Fuel Consumption Comb (mpg)', 'Engine Size (L)', 'Cylinders']].to_numpy()
y = data['CO2 Emissions (g/km)'].to_numpy()

X_train, X_test, y_train ,y_test = train_test_split(X,y,test_size = 0.2, random_state = 1)

# b)

# plt.scatter(X_train['Fuel Consumption City (L/100km)'], y_train, c = 'Red')
# plt.scatter(X_test['Fuel Consumption City (L/100km)'], y_test, c = 'Blue')
# plt.xlabel('Fuel Consumption City (L/100km)')
# plt.ylabel('CO2 Emissions (g/km)')
# plt.show()

# c)

sc = MinMaxScaler()

X_train_n = sc.fit_transform(X_train)
X_test_n = sc.transform(X_test)

# plt.figure()
# plt.subplot(1,2,1)
# plt.hist(X_train[:,0], bins=20, color='b')
# plt.subplot(1,2,2)
# plt.hist(X_train_n[:,0], bins=20, color='r')
# plt.show()

# d)
linearModel = lm.LinearRegression()
linearModel.fit(X_train_n, y_train)

print(linearModel.coef_)
# e)

y_test_p = linearModel.predict(X_test_n)
# plt.scatter(y_test, y_test_p)
# plt.xlabel("Real values")
# plt.ylabel("Predicted values")
# plt.show()

# f)

MAE = mean_absolute_error(y_test,y_test_p)
MSE = mean_squared_error(y_test,y_test_p)
MAPE = mean_absolute_percentage_error(y_test,y_test_p)
R2 = r2_score(y_test,y_test_p)
RMSE = math.sqrt(MSE)

print(f"MAE: {MAE}\nMSE = {MSE}\nMAPE: {MAPE}\nR2: {R2} \nRMSE: {RMSE}")

https://chatgpt.com/share/6818f4cb-a6a4-8010-aad9-25074f02c07d
